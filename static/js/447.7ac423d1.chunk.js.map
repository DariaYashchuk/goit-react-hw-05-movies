{"version":3,"file":"static/js/447.7ac423d1.chunk.js","mappings":"kRAEaA,EAAYC,EAAAA,EAAAA,GAAH,6JAaTC,EAAUD,EAAAA,EAAAA,GAAH,6CAIPE,EAAYF,EAAAA,EAAAA,GAAH,gDAITG,EAASH,EAAAA,EAAAA,GAAH,8LAYNI,EAAUJ,EAAAA,EAAAA,EAAH,+J,2BC2BpB,EAjDa,WACX,IAAQK,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAuBA,OArBAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,kHAIcC,EAAAA,EAAAA,IAAgBN,GAJ9B,gBAGcO,EAHd,EAGMC,KAAQD,QAEJE,EAAkBF,EAAQG,KAAI,kBAA8B,CAChEC,OADkC,EAAGA,OAErCC,QAFkC,EAAWA,QAG7CC,GAHkC,EAAoBA,GAApB,IAMpCT,EAAWK,GAXf,gDAaIK,MAAM,SAbV,sGADc,uBAAC,WAAD,wBAkBdC,EACD,GAAE,CAACf,KAGF,0BACE,SAACJ,EAAD,UACsB,IAAnBO,EAAQa,QACP,UAACtB,EAAD,YACE,SAAC,MAAD,KACA,yCAGFS,EAAQO,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAASC,EAApB,EAAoBA,GAApB,OACV,UAAChB,EAAD,YACE,UAACC,EAAD,YACE,SAAC,MAAD,IACCa,MAEH,SAACZ,EAAD,UAAUa,MALIC,EADN,OAarB,C,+LCzDDI,EAAAA,EAAAA,SAAAA,QAAyB,+BACzBA,EAAAA,EAAAA,SAAAA,QAAAA,OAAAA,cACE,6NAEK,IAAMC,EAAW,mCAAG,oGACFD,EAAAA,EAAAA,IAAU,uBADR,cACnBE,EADmB,yBAElBA,GAFkB,2CAAH,qDAKXC,EAAQ,mCAAG,WAAOC,EAAOC,GAAd,uFACCL,EAAAA,EAAAA,IAAA,8BAAiCI,EAAjC,iBAA+CC,IADhD,cAChBH,EADgB,yBAEfA,GAFe,2CAAH,wDAKRI,EAAe,mCAAG,WAAMC,GAAN,uFACNP,EAAAA,EAAAA,IAAA,iBAAoBO,IADd,cACvBL,EADuB,yBAEtBA,GAFsB,2CAAH,sDAKfM,EAAe,mCAAG,WAAMD,GAAN,uFACNP,EAAAA,EAAAA,IAAA,iBAAoBO,EAApB,aADM,cACvBL,EADuB,yBAEtBA,GAFsB,2CAAH,sDAKfb,EAAe,mCAAG,WAAMkB,GAAN,uFACNP,EAAAA,EAAAA,IAAA,iBAAoBO,EAApB,aADM,cACvBL,EADuB,yBAEtBA,GAFsB,2CAAH,qD","sources":["components/Reviews.styled.js","components/Reviews.jsx","services/movies-service.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const NoReviews = styled.li`\n  text-align: center;\n  svg {\n    width: 50px;\n    height: 50px;\n  }\n\n  p {\n    margin-top: 10px;\n    font-size: 20px;\n  }\n`;\n\nexport const Reviews = styled.ul`\n  margin-top: 20px;\n`;\n\nexport const OneReview = styled.li`\n  margin-bottom: 10px;\n`;\n\nexport const Author = styled.h3`\n  display: inline-block;\n  padding: 5px 24px;\n  border-radius: 5px;\n  background-color: #242424;\n\n  margin-bottom: 10px;\n  svg {\n    margin-right: 10px;\n  }\n`;\n\nexport const Content = styled.p`\n  text-align: justify;\n  color: #e2e2e2;\n  color: #c6c6c6;\n\n  padding: 10px;\n  border: 1px solid #e2e2e2;\n  border-radius: 5px;\n`;\n","import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { getMovieReviews } from 'services/movies-service';\nimport {\n  Reviews,\n  OneReview,\n  Author,\n  Content,\n  NoReviews,\n} from './Reviews.styled';\nimport { BiUser } from 'react-icons/bi';\nimport { BsEmojiFrown } from 'react-icons/bs';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    async function getReviewsInfo() {\n      try {\n        const {\n          data: { results },\n        } = await getMovieReviews(movieId);\n        const formatedReviews = results.map(({ author, content, id }) => ({\n          author,\n          content,\n          id,\n        }));\n\n        setReviews(formatedReviews);\n      } catch {\n        alert('error');\n      } finally {\n      }\n    }\n    getReviewsInfo();\n  }, [movieId]);\n\n  return (\n    <div>\n      <Reviews>\n        {reviews.length === 0 ? (\n          <NoReviews>\n            <BsEmojiFrown />\n            <p>No reviews</p>\n          </NoReviews>\n        ) : (\n          reviews.map(({ author, content, id }) => (\n            <OneReview key={id}>\n              <Author>\n                <BiUser />\n                {author}\n              </Author>\n              <Content>{content}</Content>\n            </OneReview>\n          ))\n        )}\n      </Reviews>\n    </div>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\n// const API_KEY = 'ad2942746ddd0723e99c6245fd903bed';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.headers.common['Authorization'] =\n  'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJhZDI5NDI3NDZkZGQwNzIzZTk5YzYyNDVmZDkwM2JlZCIsInN1YiI6IjY0YmQyNTNhMGVkMmFiMDBlMmRhYjY4YiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.usFVKO1fi_bibknfzjxz84ON7pNr7gg38J8efPhFlyU';\n\nexport const getTrending = async () => {\n  const response = await axios.get('/trending/movie/day');\n  return response;\n};\n\nexport const getMovie = async (query, page) => {\n  const response = await axios.get(`/search/movie?query=${query}&page=${page}`);\n  return response;\n};\n\nexport const getMovieDetails = async movie_id => {\n  const response = await axios.get(`/movie/${movie_id}`);\n  return response;\n};\n\nexport const getMovieCredits = async movie_id => {\n  const response = await axios.get(`/movie/${movie_id}/credits`);\n  return response;\n};\n\nexport const getMovieReviews = async movie_id => {\n  const response = await axios.get(`/movie/${movie_id}/reviews`);\n  return response;\n};\n"],"names":["NoReviews","styled","Reviews","OneReview","Author","Content","movieId","useParams","useState","reviews","setReviews","useEffect","getMovieReviews","results","data","formatedReviews","map","author","content","id","alert","getReviewsInfo","length","axios","getTrending","response","getMovie","query","page","getMovieDetails","movie_id","getMovieCredits"],"sourceRoot":""}