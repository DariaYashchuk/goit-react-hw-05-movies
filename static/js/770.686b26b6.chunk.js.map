{"version":3,"file":"static/js/770.686b26b6.chunk.js","mappings":"gRAEaA,EAAYC,EAAAA,EAAAA,IAAH,2DAKTC,EAAWD,EAAAA,EAAAA,GAAH,+HASRE,EAAUF,EAAAA,EAAAA,GAAH,mHASPG,EAAOH,EAAAA,EAAAA,GAAH,6C,SCsBjB,EA1Ca,WACX,IAAQI,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAsCE,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KAyBA,OAvBAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,kHAIcC,EAAAA,EAAAA,IAAgBN,GAJ9B,gBAGcO,EAHd,EAGMC,KAAQD,KAEJE,EAAeF,EAAKG,KAAI,gBAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,UAAWC,EAApB,EAAoBA,aAApB,MAAwC,CACpEF,KAAAA,EACAC,UAAAA,EACAE,IAAKD,EAAY,yCACqBA,GADrB,6DAHW,IAQ9BT,EAAeK,GAbnB,gDAeIM,QAAQC,IAAR,MAfJ,sGADc,uBAAC,WAAD,wBAoBdC,EACD,GAAE,CAACjB,KAGF,SAACH,EAAD,UACGM,GACCA,EAAYO,KAAI,gBAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,UAAWE,EAApB,EAAoBA,IAApB,OACd,UAAChB,EAAD,YACE,SAACH,EAAD,CAAWuB,IAAKJ,EAAKK,IAAKR,KAE1B,SAACZ,EAAD,UAAOY,KACP,uCAAeC,OAJHD,EADA,KAUvB,C,+LC1CDS,EAAAA,EAAAA,SAAAA,QAAyB,+BACzBA,EAAAA,EAAAA,SAAAA,QAAAA,OAAAA,cACE,6NAEK,IAAMC,EAAW,mCAAG,oGACFD,EAAAA,EAAAA,IAAU,uBADR,cACnBE,EADmB,yBAElBA,GAFkB,2CAAH,qDAKXC,EAAQ,mCAAG,WAAOC,EAAOC,GAAd,uFACCL,EAAAA,EAAAA,IAAA,8BAAiCI,EAAjC,iBAA+CC,IADhD,cAChBH,EADgB,yBAEfA,GAFe,2CAAH,wDAKRI,EAAe,mCAAG,WAAMC,GAAN,uFACNP,EAAAA,EAAAA,IAAA,iBAAoBO,IADd,cACvBL,EADuB,yBAEtBA,GAFsB,2CAAH,sDAKfhB,EAAe,mCAAG,WAAMqB,GAAN,uFACNP,EAAAA,EAAAA,IAAA,iBAAoBO,EAApB,aADM,cACvBL,EADuB,yBAEtBA,GAFsB,2CAAH,sDAKfM,EAAe,mCAAG,WAAMD,GAAN,uFACNP,EAAAA,EAAAA,IAAA,iBAAoBO,EAApB,aADM,cACvBL,EADuB,yBAEtBA,GAFsB,2CAAH,qD","sources":["components/Cast.styled.js","components/Cast.jsx","services/movies-service.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const CastImage = styled.img`\n  width: 150px;\n  height: 225px;\n`;\n\nexport const CastInfo = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 10px;\n\n  margin-top: 20px;\n`;\n\nexport const OneInfo = styled.li`\n  width: 150px;\n\n  padding: 8px;\n  border-radius: 6px;\n\n  background-color: #242424;\n`;\n\nexport const Name = styled.h2`\n  padding-top: 5px;\n`;\n","import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { getMovieCredits } from 'services/movies-service';\nimport { CastImage, CastInfo, OneInfo, Name } from './Cast.styled';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [castDetails, setCastDetails] = useState([]);\n\n  useEffect(() => {\n    async function getCastInfo() {\n      try {\n        const {\n          data: { cast },\n        } = await getMovieCredits(movieId);\n        const formatedCast = cast.map(({ name, character, profile_path }) => ({\n          name,\n          character,\n          img: profile_path\n            ? `https://image.tmdb.org/t/p/w500${profile_path}`\n            : `https://joadre.com/wp-content/uploads/2019/02/no-image.jpg`,\n        }));\n\n        setCastDetails(formatedCast);\n      } catch (error) {\n        console.log(error);\n      } finally {\n      }\n    }\n    getCastInfo();\n  }, [movieId]);\n\n  return (\n    <CastInfo>\n      {castDetails &&\n        castDetails.map(({ name, character, img }) => (\n          <OneInfo key={name}>\n            <CastImage src={img} alt={name} />\n\n            <Name>{name}</Name>\n            <p>Character: {character}</p>\n          </OneInfo>\n        ))}\n    </CastInfo>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\n// const API_KEY = 'ad2942746ddd0723e99c6245fd903bed';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.headers.common['Authorization'] =\n  'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJhZDI5NDI3NDZkZGQwNzIzZTk5YzYyNDVmZDkwM2JlZCIsInN1YiI6IjY0YmQyNTNhMGVkMmFiMDBlMmRhYjY4YiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.usFVKO1fi_bibknfzjxz84ON7pNr7gg38J8efPhFlyU';\n\nexport const getTrending = async () => {\n  const response = await axios.get('/trending/movie/day');\n  return response;\n};\n\nexport const getMovie = async (query, page) => {\n  const response = await axios.get(`/search/movie?query=${query}&page=${page}`);\n  return response;\n};\n\nexport const getMovieDetails = async movie_id => {\n  const response = await axios.get(`/movie/${movie_id}`);\n  return response;\n};\n\nexport const getMovieCredits = async movie_id => {\n  const response = await axios.get(`/movie/${movie_id}/credits`);\n  return response;\n};\n\nexport const getMovieReviews = async movie_id => {\n  const response = await axios.get(`/movie/${movie_id}/reviews`);\n  return response;\n};\n"],"names":["CastImage","styled","CastInfo","OneInfo","Name","movieId","useParams","useState","castDetails","setCastDetails","useEffect","getMovieCredits","cast","data","formatedCast","map","name","character","profile_path","img","console","log","getCastInfo","src","alt","axios","getTrending","response","getMovie","query","page","getMovieDetails","movie_id","getMovieReviews"],"sourceRoot":""}