{"version":3,"file":"static/js/946.4fab4def.chunk.js","mappings":"2SAGaA,EAAUC,EAAAA,EAAAA,QAAH,6CAIPC,EAAQD,EAAAA,EAAAA,GAAH,wGAQLE,EAAWF,EAAAA,EAAAA,GAAH,kPAgBRG,GAAaH,EAAAA,EAAAA,GAAOI,EAAAA,GAAPJ,CAAH,iKAUVK,EAAQL,EAAAA,EAAAA,IAAH,wGAOLM,EAAeN,EAAAA,EAAAA,QAAH,0VAoBZO,EAAYP,EAAAA,EAAAA,GAAH,mKAUTQ,EAAOR,EAAAA,EAAAA,EAAH,wFAMJS,EAAQT,EAAAA,EAAAA,GAAH,iM,SCKlB,EAxEa,WACX,OAA4CU,EAAAA,EAAAA,UAAS,IAArD,eAAOC,EAAP,KAAuBC,EAAvB,KACMC,GAAWC,EAAAA,EAAAA,MA6BjB,OA3BAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,oHAE2BC,EAAAA,EAAAA,MAF3B,gBAEYC,EAFZ,EAEYA,KAEFC,EAAsB,SAAAC,GAC1B,OAAOA,EAAKC,MAAM,EAAG,EACtB,EAEKC,EAAyBJ,EAAKK,QAAQC,KAC1C,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,YAAaC,EAA3B,EAA2BA,aAA3B,MAA+C,CAC7CH,GAAAA,EACAC,MAAAA,EACAC,YAAAA,EACAP,KAAMD,EAAoBS,GAJ5B,IAQFf,EAAkBS,GAjBtB,kDAmBIO,MAAM,SAnBV,uGADc,uBAAC,WAAD,wBAwBdC,EACD,GAAE,KAGD,UAAC9B,EAAD,YACE,UAACU,EAAD,mCACwB,KACtB,gBACEqB,MAAM,KACNC,OAAO,KACPC,QAAQ,YACRC,KAAK,OACLC,MAAM,6BALR,UAOE,iBACEV,GAAG,YACHW,EAAE,mKACFF,KAAK,kBAIX,SAAChC,EAAD,UACGU,EAAeY,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,YAAaP,EAA3B,EAA2BA,KAA3B,OAClB,UAACjB,EAAD,YACE,SAACG,EAAD,CACE+B,IAAG,yCAAoCV,GACvCI,MAAM,OACNO,IAAI,MAEN,UAAC/B,EAAD,YACE,SAAC,MAAD,KACA,SAACC,EAAD,UAAYkB,KACZ,SAAC,EAAD,UAAON,KAEP,SAAChB,EAAD,CAAYmC,GAAE,iBAAYd,GAAMe,MAAO,CAAEC,KAAM3B,GAA/C,4BAXWW,EADG,QAqB3B,C,+LCrFDiB,EAAAA,EAAAA,SAAAA,QAAyB,+BACzBA,EAAAA,EAAAA,SAAAA,QAAAA,OAAAA,cACE,6NAEK,IAAMzB,EAAW,mCAAG,oGACFyB,EAAAA,EAAAA,IAAU,uBADR,cACnBC,EADmB,yBAElBA,GAFkB,2CAAH,qDAKXC,EAAQ,mCAAG,WAAOC,EAAOC,GAAd,uFACCJ,EAAAA,EAAAA,IAAA,8BAAiCG,EAAjC,iBAA+CC,IADhD,cAChBH,EADgB,yBAEfA,GAFe,2CAAH,wDAKRI,EAAe,mCAAG,WAAMC,GAAN,uFACNN,EAAAA,EAAAA,IAAA,iBAAoBM,IADd,cACvBL,EADuB,yBAEtBA,GAFsB,2CAAH,sDAKfM,EAAe,mCAAG,WAAMD,GAAN,uFACNN,EAAAA,EAAAA,IAAA,iBAAoBM,EAApB,aADM,cACvBL,EADuB,yBAEtBA,GAFsB,2CAAH,sDAKfO,EAAe,mCAAG,WAAMF,GAAN,uFACNN,EAAAA,EAAAA,IAAA,iBAAoBM,EAApB,aADM,cACvBL,EADuB,yBAEtBA,GAFsB,2CAAH,qD","sources":["pages/Home.styled.js","pages/Home.jsx","services/movies-service.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const Section = styled.section`\n  margin-top: 60px;\n`;\n\nexport const Films = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 24px 16px;\n\n  margin-top: 20px;\n`;\n\nexport const FilmCard = styled.li`\n  display: block;\n  width: 267px;\n  height: 379px;\n  background-color: #717d7c;\n\n  border-radius: 8px;\n  overflow: hidden;\n\n  position: relative;\n\n  &:hover section {\n    transform: translateY(-100%);\n  }\n`;\n\nexport const StyledLink = styled(Link)`\n  display: inline-block;\n  padding: 5px 24px;\n  border-radius: 20px;\n  background: #053ba3;\n\n  position: relative;\n  left: 130px;\n`;\n\nexport const Image = styled.img`\n  /* width: 180px; */\n  /* height: 256px; */\n  width: 100%;\n  height: 100%;\n`;\n\nexport const FilmDescWrap = styled.section`\n  width: 100%;\n\n  position: absolute;\n\n  background: rgba(16, 16, 16, 0.29);\n  backdrop-filter: blur(2px);\n\n  transform: translateY(0);\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  svg {\n    position: absolute;\n    left: 225px;\n    display: block;\n    width: 27px;\n    height: 27px;\n  }\n`;\n\nexport const FilmTitle = styled.h2`\n  font-family: Righteous;\n  font-size: 25px;\n  line-height: 1.24;\n  font-weight: 400;\n  text-transform: uppercase;\n\n  width: 220px;\n`;\n\nexport const Date = styled.p`\n  font-size: 18px;\n  font-weight: 400;\n  line-height: 1.389;\n`;\n\nexport const Title = styled.h2`\n  /* font-family: DM Sans; */\n  font-family: Nunito;\n  font-size: 30px;\n  font-weight: 500;\n\n  svg {\n    position: relative;\n    top: -8px;\n    left: 8px;\n  }\n`;\n","import { AiFillHeart } from 'react-icons/ai';\n\nimport { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { getTrending } from 'services/movies-service';\nimport {\n  StyledLink,\n  FilmCard,\n  Image,\n  Title,\n  Films,\n  FilmTitle,\n  Section,\n  FilmDescWrap,\n  Date,\n} from './Home.styled';\n\nconst Home = () => {\n  const [trendingMovies, setTrendingMovies] = useState([]);\n  const location = useLocation();\n\n  useEffect(() => {\n    async function addTrendingMovies() {\n      try {\n        const { data } = await getTrending();\n\n        const formatedReleaseDate = date => {\n          return date.slice(0, 4);\n        };\n\n        const formatedTrendingMovies = data.results.map(\n          ({ id, title, poster_path, release_date }) => ({\n            id,\n            title,\n            poster_path,\n            date: formatedReleaseDate(release_date),\n          })\n        );\n\n        setTrendingMovies(formatedTrendingMovies);\n      } catch {\n        alert('error');\n      } finally {\n      }\n    }\n    addTrendingMovies();\n  }, []);\n\n  return (\n    <Section>\n      <Title>\n        The Most Trending Now{' '}\n        <svg\n          width=\"32\"\n          height=\"25\"\n          viewBox=\"0 0 32 25\"\n          fill=\"none\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <path\n            id=\"Ellipse 3\"\n            d=\"M32 1.78619C32 5.92832 11.6421 24.7862 7.5 24.7862C3.35786 24.7862 0 21.4283 0 17.2862C0 13.1441 7.85786 6.78619 12 6.78619C21.5 1.28618 32 -2.35595 32 1.78619Z\"\n            fill=\"#053BA3\"\n          />\n        </svg>\n      </Title>\n      <Films>\n        {trendingMovies.map(({ id, title, poster_path, date }) => (\n          <FilmCard key={id}>\n            <Image\n              src={`https://image.tmdb.org/t/p/w500${poster_path}`}\n              width=\"50px\"\n              alt=\"\"\n            />\n            <FilmDescWrap>\n              <AiFillHeart />\n              <FilmTitle>{title}</FilmTitle>\n              <Date>{date}</Date>\n\n              <StyledLink to={`movies/${id}`} state={{ from: location }}>\n                More info\n              </StyledLink>\n            </FilmDescWrap>\n          </FilmCard>\n        ))}\n      </Films>\n    </Section>\n  );\n};\nexport default Home;\n","import axios from 'axios';\n\n// const API_KEY = 'ad2942746ddd0723e99c6245fd903bed';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.headers.common['Authorization'] =\n  'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJhZDI5NDI3NDZkZGQwNzIzZTk5YzYyNDVmZDkwM2JlZCIsInN1YiI6IjY0YmQyNTNhMGVkMmFiMDBlMmRhYjY4YiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.usFVKO1fi_bibknfzjxz84ON7pNr7gg38J8efPhFlyU';\n\nexport const getTrending = async () => {\n  const response = await axios.get('/trending/movie/day');\n  return response;\n};\n\nexport const getMovie = async (query, page) => {\n  const response = await axios.get(`/search/movie?query=${query}&page=${page}`);\n  return response;\n};\n\nexport const getMovieDetails = async movie_id => {\n  const response = await axios.get(`/movie/${movie_id}`);\n  return response;\n};\n\nexport const getMovieCredits = async movie_id => {\n  const response = await axios.get(`/movie/${movie_id}/credits`);\n  return response;\n};\n\nexport const getMovieReviews = async movie_id => {\n  const response = await axios.get(`/movie/${movie_id}/reviews`);\n  return response;\n};\n"],"names":["Section","styled","Films","FilmCard","StyledLink","Link","Image","FilmDescWrap","FilmTitle","Date","Title","useState","trendingMovies","setTrendingMovies","location","useLocation","useEffect","getTrending","data","formatedReleaseDate","date","slice","formatedTrendingMovies","results","map","id","title","poster_path","release_date","alert","addTrendingMovies","width","height","viewBox","fill","xmlns","d","src","alt","to","state","from","axios","response","getMovie","query","page","getMovieDetails","movie_id","getMovieCredits","getMovieReviews"],"sourceRoot":""}