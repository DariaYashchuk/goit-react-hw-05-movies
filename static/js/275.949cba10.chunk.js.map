{"version":3,"file":"static/js/275.949cba10.chunk.js","mappings":"iOA0EA,UAtEkB,WAAO,IAAD,IACdA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwCE,EAAAA,EAAAA,UAAS,CAAC,GAAlD,eAAOC,EAAP,KAAqBC,EAArB,KACMC,GAAWC,EAAAA,EAAAA,MACXC,GAAmBC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,WA2BxD,OAzBAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,4HAE2BC,EAAAA,EAAAA,IAAgBZ,GAF3C,gBAEYa,EAFZ,EAEYA,KAEFC,EAAQD,EAAKE,OAAOC,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAE3BC,EAAiDN,EAAjDM,GAAIC,EAA6CP,EAA7CO,MAAOC,EAAsCR,EAAtCQ,WAAYC,EAA0BT,EAA1BS,SAAUC,EAAgBV,EAAhBU,YAEzCnB,EAAgB,CACde,GAAAA,EACAC,MAAAA,EACAC,WAAAA,EACAC,SAAAA,EACAR,MAAAA,EACAS,YAAAA,IAdN,kDAiBIC,MAAM,SAjBV,uGADc,uBAAC,WAAD,wBAsBdC,EACD,GAAE,CAACzB,KAGF,yBACGG,IACC,4BACE,0BACE,SAAC,KAAD,CAAMuB,GAAInB,EAAiBoB,QAA3B,wBAEF,gBACEC,IAAG,yCAAoCzB,EAAaoB,aACpDM,IAAI,GACJC,MAAM,WAER,wBAAK3B,EAAaiB,SAClB,wCAAgBjB,EAAakB,eAC7B,sCACA,uBAAIlB,EAAamB,YACjB,oCACA,wBACGnB,EAAaW,OACZX,EAAaW,MAAME,KAAI,SAAAE,GAAI,OAAI,wBAAgBA,GAAPA,EAAb,OAE/B,mDACA,2BACE,yBACE,SAAC,KAAD,CAAMQ,GAAG,OAAT,qBAEF,yBACE,SAAC,KAAD,CAAMA,GAAG,UAAT,2BAGJ,SAAC,EAAAK,SAAD,CAAUC,UAAU,wCAApB,UACE,SAAC,KAAD,UAMX,C,+LCrEDC,EAAAA,EAAAA,SAAAA,QAAyB,+BACzBA,EAAAA,EAAAA,SAAAA,QAAAA,OAAAA,cACE,6NAEK,IAAMC,EAAW,mCAAG,oGACFD,EAAAA,EAAAA,IAAU,uBADR,cACnBE,EADmB,yBAElBA,GAFkB,2CAAH,qDAKXC,EAAQ,mCAAG,WAAOC,EAAOC,GAAd,uFACCL,EAAAA,EAAAA,IAAA,8BAAiCI,EAAjC,iBAA+CC,IADhD,cAChBH,EADgB,yBAEfA,GAFe,2CAAH,wDAKRvB,EAAe,mCAAG,WAAM2B,GAAN,uFACNN,EAAAA,EAAAA,IAAA,iBAAoBM,IADd,cACvBJ,EADuB,yBAEtBA,GAFsB,2CAAH,sDAKfK,EAAe,mCAAG,WAAMD,GAAN,uFACNN,EAAAA,EAAAA,IAAA,iBAAoBM,EAApB,aADM,cACvBJ,EADuB,yBAEtBA,GAFsB,2CAAH,sDAKfM,EAAe,mCAAG,WAAMF,GAAN,uFACNN,EAAAA,EAAAA,IAAA,iBAAoBM,EAApB,aADM,cACvBJ,EADuB,yBAEtBA,GAFsB,2CAAH,qD","sources":["pages/MoviePage.jsx","services/movies-service.js"],"sourcesContent":["import { useParams, Link, Outlet, useLocation } from 'react-router-dom';\nimport { useEffect, useState, useRef, Suspense } from 'react';\nimport { getMovieDetails } from 'services/movies-service';\n\nconst MoviePage = () => {\n  const { movieId } = useParams();\n  const [movieDetails, setMovieDetails] = useState({});\n  const location = useLocation();\n  const backLinkLocation = useRef(location.state?.from ?? '/movies');\n\n  useEffect(() => {\n    async function getMovieInfo() {\n      try {\n        const { data } = await getMovieDetails(movieId);\n\n        const names = data.genres.map(genre => genre.name);\n\n        const { id, title, popularity, overview, poster_path } = data;\n\n        setMovieDetails({\n          id,\n          title,\n          popularity,\n          overview,\n          names,\n          poster_path,\n        });\n      } catch {\n        alert('error');\n      } finally {\n      }\n    }\n    getMovieInfo();\n  }, [movieId]);\n\n  return (\n    <div>\n      {movieDetails && (\n        <div>\n          <div>\n            <Link to={backLinkLocation.current}>Go Back</Link>\n          </div>\n          <img\n            src={`https://image.tmdb.org/t/p/w500${movieDetails.poster_path}`}\n            alt=\"\"\n            width=\"300px\"\n          />\n          <h1>{movieDetails.title}</h1>\n          <p>User score: {movieDetails.popularity}</p>\n          <h2>Overview</h2>\n          <p>{movieDetails.overview}</p>\n          <h2>Genres</h2>\n          <ul>\n            {movieDetails.names &&\n              movieDetails.names.map(name => <li key={name}>{name}</li>)}\n          </ul>\n          <h2>Additinal information</h2>\n          <ul>\n            <li>\n              <Link to=\"cast\">Cast</Link>\n            </li>\n            <li>\n              <Link to=\"reviews\">Reviews</Link>\n            </li>\n          </ul>\n          <Suspense fallback={<div>Loading...</div>}>\n            <Outlet />\n          </Suspense>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default MoviePage;\n","import axios from 'axios';\n\n// const API_KEY = 'ad2942746ddd0723e99c6245fd903bed';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.headers.common['Authorization'] =\n  'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJhZDI5NDI3NDZkZGQwNzIzZTk5YzYyNDVmZDkwM2JlZCIsInN1YiI6IjY0YmQyNTNhMGVkMmFiMDBlMmRhYjY4YiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.usFVKO1fi_bibknfzjxz84ON7pNr7gg38J8efPhFlyU';\n\nexport const getTrending = async () => {\n  const response = await axios.get('/trending/movie/day');\n  return response;\n};\n\nexport const getMovie = async (query, page) => {\n  const response = await axios.get(`/search/movie?query=${query}&page=${page}`);\n  return response;\n};\n\nexport const getMovieDetails = async movie_id => {\n  const response = await axios.get(`/movie/${movie_id}`);\n  return response;\n};\n\nexport const getMovieCredits = async movie_id => {\n  const response = await axios.get(`/movie/${movie_id}/credits`);\n  return response;\n};\n\nexport const getMovieReviews = async movie_id => {\n  const response = await axios.get(`/movie/${movie_id}/reviews`);\n  return response;\n};\n"],"names":["movieId","useParams","useState","movieDetails","setMovieDetails","location","useLocation","backLinkLocation","useRef","state","from","useEffect","getMovieDetails","data","names","genres","map","genre","name","id","title","popularity","overview","poster_path","alert","getMovieInfo","to","current","src","alt","width","Suspense","fallback","axios","getTrending","response","getMovie","query","page","movie_id","getMovieCredits","getMovieReviews"],"sourceRoot":""}