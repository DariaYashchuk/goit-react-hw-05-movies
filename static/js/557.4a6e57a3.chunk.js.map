{"version":3,"file":"static/js/557.4a6e57a3.chunk.js","mappings":"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","sources":["components/SearchBar.styled.js","components/SearchBar.jsx","pages/Movies.styled.js","pages/Movies.jsx","services/movies-service.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const Input = styled.input`\n  background-color: transparent;\n  border: none;\n  border-bottom: 1px solid white;\n  color: white;\n\n  height: 35px;\n  width: 250px;\n\n  color: #fff;\n  font-family: 'Open Sans', sans-serif;\n  font-size: 20px;\n\n  transition: border-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &::placeholder {\n    color: #fff;\n    font-family: 'Open Sans', sans-serif;\n    font-size: 20px;\n  }\n\n  &:focus {\n    outline: 0;\n    border-color: #053ba3;\n  }\n`;\n\nexport const Button = styled.button`\n  cursor: pointer;\n  height: 35px;\n  width: 35px;\n\n  padding: 0;\n  border: none;\n  font: inherit;\n  color: inherit;\n  background-color: transparent;\n\n  svg {\n    width: 100%;\n    height: 100%;\n    transition: fill 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n    &:hover {\n      fill: #053ba3;\n    }\n  }\n`;\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { AiOutlineSearch } from 'react-icons/ai';\n\nimport { Input, Form, Button } from './SearchBar.styled';\n\nconst SearchBar = ({ onSubmit }) => {\n  const [query, setQuery] = useState('');\n\n  const handleInputChange = e => {\n    setQuery(e.currentTarget.value.toLowerCase());\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (!query.trim()) {\n      alert('Fill in the request');\n      return;\n    }\n\n    onSubmit(query);\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Input\n        type=\"text\"\n        value={query}\n        onChange={handleInputChange}\n        autoComplete=\"off\"\n        placeholder=\"Search for movie\"\n      />\n\n      <Button type=\"submit\">\n        <AiOutlineSearch />\n      </Button>\n    </Form>\n  );\n};\n\nSearchBar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default SearchBar;\n","import styled from '@emotion/styled';\n\nexport const Section = styled.section`\n  margin-top: 30px;\n  margin-bottom: 20px;\n\n  @media screen and (min-width: 768px) {\n    margin-top: 60px;\n  }\n`;\n\nexport const Image = styled.img`\n  width: 100%;\n  height: 100%;\n`;\n\nexport const Films = styled.ul`\n  display: flex;\n  align-items: center;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 24px;\n\n  margin-top: 20px;\n\n  @media screen and (min-width: 768px) {\n    margin-top: 60px;\n  }\n`;\n\nexport const FilmCard = styled.li`\n  display: block;\n  width: 200px;\n\n  height: 283px;\n\n  border-radius: 8px;\n  /* overflow: hidden; */\n  transition: scale 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover {\n    scale: 1.1;\n  }\n`;\n\nexport const FilmDescWrap = styled.section`\n  padding: 5px;\n\n  background: rgba(16, 16, 16, 0.29);\n  backdrop-filter: blur(2px);\n\n  transform: translateY(-100%);\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n`;\n\nexport const FilmTitle = styled.h2`\n  font-family: Righteous;\n  font-size: 25px;\n  line-height: 1.24;\n  font-weight: 400;\n  text-transform: uppercase;\n`;\n","import { useEffect, useState } from 'react';\nimport * as MoviesService from 'services/movies-service';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport SearchBar from 'components/SearchBar';\nimport {\n  Section,\n  FilmCard,\n  Films,\n  FilmDescWrap,\n  FilmTitle,\n  Image,\n} from './Movies.styled';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [filteredMovies, setFilteredMovies] = useState([]);\n  const [page, setPage] = useState(1);\n  const [isLoadMoreBtnVisible, setIsLoadMoreBtnVisible] = useState(false);\n  const location = useLocation();\n  const query = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    if (query === '') {\n      return;\n    }\n    async function addFilteredMovies() {\n      try {\n        const { data } = await MoviesService.getMovie(query, page);\n\n        if (data.total_results === 0) {\n          alert('No movies');\n          return;\n        }\n\n        const formatedFilteredMovies = data.results.map(\n          ({ id, title, poster_path }) => ({\n            id,\n            title,\n            poster_path,\n          })\n        );\n\n        setFilteredMovies(prevFilteredMovies => [\n          ...prevFilteredMovies,\n          ...formatedFilteredMovies,\n        ]);\n        setIsLoadMoreBtnVisible(page !== data.total_pages);\n      } catch {\n        alert('error');\n      } finally {\n      }\n    }\n    if (query) {\n      addFilteredMovies();\n    }\n  }, [query, page]);\n\n  const handleFormSubmit = query => {\n    setSearchParams({ query });\n    setFilteredMovies([]);\n    setPage(1);\n  };\n\n  const onLoadMore = () => {\n    setPage(prevPage => prevPage + 1);\n  };\n\n  return (\n    <Section>\n      <SearchBar onSubmit={handleFormSubmit} />\n\n      <Films>\n        {filteredMovies.map(({ id, title, poster_path }) => (\n          <FilmCard key={id}>\n            <Link to={`${id}`} id={id} state={{ from: location }}>\n              <Image\n                src={`https://image.tmdb.org/t/p/w500${poster_path}`}\n                alt={title}\n              />\n              <FilmDescWrap>\n                <FilmTitle>{title}</FilmTitle>\n              </FilmDescWrap>\n            </Link>\n          </FilmCard>\n        ))}\n      </Films>\n      {isLoadMoreBtnVisible && <button onClick={onLoadMore}>Load more</button>}\n    </Section>\n  );\n};\nexport default Movies;\n","import axios from 'axios';\n\n// const API_KEY = 'ad2942746ddd0723e99c6245fd903bed';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.headers.common['Authorization'] =\n  'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJhZDI5NDI3NDZkZGQwNzIzZTk5YzYyNDVmZDkwM2JlZCIsInN1YiI6IjY0YmQyNTNhMGVkMmFiMDBlMmRhYjY4YiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.usFVKO1fi_bibknfzjxz84ON7pNr7gg38J8efPhFlyU';\n\nexport const getTrending = async () => {\n  const response = await axios.get('/trending/movie/day');\n  return response;\n};\n\nexport const getMovie = async (query, page) => {\n  const response = await axios.get(`/search/movie?query=${query}&page=${page}`);\n  return response;\n};\n\nexport const getMovieDetails = async movie_id => {\n  const response = await axios.get(`/movie/${movie_id}`);\n  return response;\n};\n\nexport const getMovieCredits = async movie_id => {\n  const response = await axios.get(`/movie/${movie_id}/credits`);\n  return response;\n};\n\nexport const getMovieReviews = async movie_id => {\n  const response = await axios.get(`/movie/${movie_id}/reviews`);\n  return response;\n};\n"],"names":["Form","styled","Input","Button","onSubmit","useState","query","setQuery","e","preventDefault","trim","alert","type","value","onChange","currentTarget","toLowerCase","autoComplete","placeholder","Section","Image","Films","FilmCard","FilmDescWrap","FilmTitle","useSearchParams","searchParams","setSearchParams","filteredMovies","setFilteredMovies","page","setPage","isLoadMoreBtnVisible","setIsLoadMoreBtnVisible","location","useLocation","get","useEffect","MoviesService","data","total_results","formatedFilteredMovies","results","map","id","title","poster_path","prevFilteredMovies","total_pages","addFilteredMovies","to","state","from","src","alt","onClick","prevPage","axios","getTrending","response","getMovie","getMovieDetails","movie_id","getMovieCredits","getMovieReviews"],"sourceRoot":""}