{"version":3,"file":"static/js/450.c939dcdb.chunk.js","mappings":"gRAwCA,EArCkB,SAAC,GAAkB,IAAhBA,EAAe,EAAfA,SACnB,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAiBA,OACE,kBAAMH,SAZa,SAAAI,GACnBA,EAAEC,iBAEGH,EAAMI,OAKXN,EAASE,GAJPK,MAAM,sBAKT,EAGC,WACE,kBACEC,KAAK,OACLC,MAAOP,EACPQ,SApBoB,SAAAN,GACxBD,EAASC,EAAEO,cAAcF,MAAMG,cAChC,EAmBKC,aAAa,MACbC,WAAS,KAGX,mBAAQN,KAAK,SAAb,sBAGL,ECuCD,EApEe,WAAO,IAAD,EACnB,GAAwCO,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA4ChB,EAAAA,EAAAA,UAAS,IAArD,eAAOiB,EAAP,KAAuBC,EAAvB,KACA,GAAwBlB,EAAAA,EAAAA,UAAS,GAAjC,eAAOmB,EAAP,KAAaC,EAAb,KACA,GAAwDpB,EAAAA,EAAAA,WAAS,GAAjE,eAAOqB,EAAP,KAA6BC,EAA7B,KACMC,GAAWC,EAAAA,EAAAA,MACXvB,EAAK,UAAGc,EAAaU,IAAI,gBAApB,QAAgC,IAE3CC,EAAAA,EAAAA,YAAU,WAAM,wCAId,iHAE2BC,EAAAA,GAAuB1B,EAAOkB,GAFzD,mBAI+B,KAFnBS,EAFZ,EAEYA,MAECC,cAJb,uBAKMvB,MAAM,aALZ,0BASUwB,EAAyBF,EAAKG,QAAQC,KAAI,kBAAoB,CAClEC,GAD8C,EAAGA,GAEjDC,MAF8C,EAAOA,MAAP,IAKhDhB,GAAkB,SAAAiB,GAAkB,wBAC/BA,IAD+B,OAE/BL,GAF+B,IAIpCR,EAAwBH,IAASS,EAAKQ,aAlB1C,kDAoBI9B,MAAM,SApBV,uGAJc,sBACA,KAAVL,GA2BAA,GA5BU,mCA6BZoC,EAEH,GAAE,CAACpC,EAAOkB,IAYX,OACE,4BACE,SAAC,EAAD,CAAWpB,SAZU,SAAAE,GACvBe,EAAgB,CAAEf,MAAAA,IAClBiB,EAAkB,IAClBE,EAAQ,EACT,KAUG,wBACGH,EAAee,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OAClB,yBACE,SAAC,KAAD,CAAMI,GAAE,UAAKL,GAAMA,GAAIA,EAAIM,MAAO,CAAEC,KAAMjB,GAA1C,SACGW,KAFID,EADS,MAQrBZ,IAAwB,mBAAQoB,QAjBlB,WACjBrB,GAAQ,SAAAsB,GAAQ,OAAIA,EAAW,CAAf,GACjB,EAe4B,yBAG9B,C,+LCrEDC,EAAAA,EAAAA,SAAAA,QAAyB,+BACzBA,EAAAA,EAAAA,SAAAA,QAAAA,OAAAA,cACE,6NAEK,IAAMC,EAAW,mCAAG,oGACFD,EAAAA,EAAAA,IAAU,uBADR,cACnBE,EADmB,yBAElBA,GAFkB,2CAAH,qDAKXC,EAAQ,mCAAG,WAAO7C,EAAOkB,GAAd,uFACCwB,EAAAA,EAAAA,IAAA,8BAAiC1C,EAAjC,iBAA+CkB,IADhD,cAChB0B,EADgB,yBAEfA,GAFe,2CAAH,wDAKRE,EAAe,mCAAG,WAAMC,GAAN,uFACNL,EAAAA,EAAAA,IAAA,iBAAoBK,IADd,cACvBH,EADuB,yBAEtBA,GAFsB,2CAAH,sDAKfI,EAAe,mCAAG,WAAMD,GAAN,uFACNL,EAAAA,EAAAA,IAAA,iBAAoBK,EAApB,aADM,cACvBH,EADuB,yBAEtBA,GAFsB,2CAAH,sDAKfK,EAAe,mCAAG,WAAMF,GAAN,uFACNL,EAAAA,EAAAA,IAAA,iBAAoBK,EAApB,aADM,cACvBH,EADuB,yBAEtBA,GAFsB,2CAAH,qD","sources":["components/SearchBar.jsx","pages/Movies.jsx","services/movies-service.js"],"sourcesContent":["import { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nconst SearchBar = ({ onSubmit }) => {\n  const [query, setQuery] = useState('');\n\n  const handleInputChange = e => {\n    setQuery(e.currentTarget.value.toLowerCase());\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (!query.trim()) {\n      alert('Fill in the request');\n      return;\n    }\n\n    onSubmit(query);\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        value={query}\n        onChange={handleInputChange}\n        autoComplete=\"off\"\n        autoFocus\n      />\n\n      <button type=\"submit\">Search</button>\n    </form>\n  );\n};\n\nSearchBar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default SearchBar;\n","import { useEffect, useState } from 'react';\nimport * as MoviesService from 'services/movies-service';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport SearchBar from 'components/SearchBar';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [filteredMovies, setFilteredMovies] = useState([]);\n  const [page, setPage] = useState(1);\n  const [isLoadMoreBtnVisible, setIsLoadMoreBtnVisible] = useState(false);\n  const location = useLocation();\n  const query = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    if (query === '') {\n      return;\n    }\n    async function addFilteredMovies() {\n      try {\n        const { data } = await MoviesService.getMovie(query, page);\n\n        if (data.total_results === 0) {\n          alert('No movies');\n          return;\n        }\n\n        const formatedFilteredMovies = data.results.map(({ id, title }) => ({\n          id,\n          title,\n        }));\n\n        setFilteredMovies(prevFilteredMovies => [\n          ...prevFilteredMovies,\n          ...formatedFilteredMovies,\n        ]);\n        setIsLoadMoreBtnVisible(page !== data.total_pages);\n      } catch {\n        alert('error');\n      } finally {\n      }\n    }\n    if (query) {\n      addFilteredMovies();\n    }\n  }, [query, page]);\n\n  const handleFormSubmit = query => {\n    setSearchParams({ query });\n    setFilteredMovies([]);\n    setPage(1);\n  };\n\n  const onLoadMore = () => {\n    setPage(prevPage => prevPage + 1);\n  };\n\n  return (\n    <div>\n      <SearchBar onSubmit={handleFormSubmit} />\n\n      <ul>\n        {filteredMovies.map(({ id, title }) => (\n          <li key={id}>\n            <Link to={`${id}`} id={id} state={{ from: location }}>\n              {title}\n            </Link>\n          </li>\n        ))}\n      </ul>\n      {isLoadMoreBtnVisible && <button onClick={onLoadMore}>Load more</button>}\n    </div>\n  );\n};\nexport default Movies;\n","import axios from 'axios';\n\n// const API_KEY = 'ad2942746ddd0723e99c6245fd903bed';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.headers.common['Authorization'] =\n  'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJhZDI5NDI3NDZkZGQwNzIzZTk5YzYyNDVmZDkwM2JlZCIsInN1YiI6IjY0YmQyNTNhMGVkMmFiMDBlMmRhYjY4YiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.usFVKO1fi_bibknfzjxz84ON7pNr7gg38J8efPhFlyU';\n\nexport const getTrending = async () => {\n  const response = await axios.get('/trending/movie/day');\n  return response;\n};\n\nexport const getMovie = async (query, page) => {\n  const response = await axios.get(`/search/movie?query=${query}&page=${page}`);\n  return response;\n};\n\nexport const getMovieDetails = async movie_id => {\n  const response = await axios.get(`/movie/${movie_id}`);\n  return response;\n};\n\nexport const getMovieCredits = async movie_id => {\n  const response = await axios.get(`/movie/${movie_id}/credits`);\n  return response;\n};\n\nexport const getMovieReviews = async movie_id => {\n  const response = await axios.get(`/movie/${movie_id}/reviews`);\n  return response;\n};\n"],"names":["onSubmit","useState","query","setQuery","e","preventDefault","trim","alert","type","value","onChange","currentTarget","toLowerCase","autoComplete","autoFocus","useSearchParams","searchParams","setSearchParams","filteredMovies","setFilteredMovies","page","setPage","isLoadMoreBtnVisible","setIsLoadMoreBtnVisible","location","useLocation","get","useEffect","MoviesService","data","total_results","formatedFilteredMovies","results","map","id","title","prevFilteredMovies","total_pages","addFilteredMovies","to","state","from","onClick","prevPage","axios","getTrending","response","getMovie","getMovieDetails","movie_id","getMovieCredits","getMovieReviews"],"sourceRoot":""}